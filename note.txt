kafka-console-consumer.sh --bootstrap-server bigdata101:9092,bigdata102:9092 --topic
kafka-console-producer.sh --broker-list bigdata101:9092 --topic 

ODS层
	Kafka中的topic_log 和 topic_db即为ODS层

DIM层
1.数据过滤
	获取初始化数据(Maxwell主目录下执行即可)
	./bin/maxwell-bootstrap --database gmall --table base_trademark --config ./config.properties

	保留的数据：新增、变化以及初始化数据
	{"database":"gmall","table":"base_trademark","type":"insert","ts":1645444616,"xid":519,"commit":true,"data":{"id":12,"tm_name":"Honor","logo_url":null}}
	{"database":"gmall","table":"base_trademark","type":"update","ts":1645444657,"xid":613,"commit":true,"data":{"id":12,"tm_name":"Honor","logo_url":"/static/honor.png"},"old":{"logo_url":null}}
	{"database":"gmall","table":"base_trademark","type":"bootstrap-insert","ts":1645444864,"data":{"id":1,"tm_name":"三星","logo_url":"/static/default.jpg"}}

	不保留的数据：
	{"database":"gmall","table":"base_trademark","type":"delete","ts":1645444683,"xid":675,"commit":true,"data":{"id":12,"tm_name":"Honor","logo_url":"/static/honor.png"}}
	{"database":"gmall","table":"base_trademark","type":"bootstrap-start","ts":1645444864,"data":{}}
	{"database":"gmall","table":"base_trademark","type":"bootstrap-complete","ts":1645444864,"data":{}}
2.过滤方式及输出格式
	输出的格式：JSONObject
	方式：filter()+map() ×
	     flatMap()      √
	     可以完成格式的转化和过滤操作
3.Flink CDC读取配置信息表
	配置信息表字段:
		sourceTable:	数据源表名
		sinkTable:		Hbase中表名
		sinkColunms:	Hbase中表字段信息、过滤字段
		sinkPk:			Hbase中表的主键
		sinkExtends:	Hbase中表的建表扩展语句
	配置表建表语句：
		create database gmall_config_2212 charset utf8 default collate utf8_general_ci;
		CREATE TABLE `table_process`(
			`source_table` VARCHAR(200) NOT NULL COMMENT '来源表',
			`sink_table` VARCHAR(200) DEFAULT NULL COMMENT '输出表',
			`sink_columns` VARCHAR(2000) DEFAULT NULL COMMENT '输出字段',
			`sink_pk` VARCHAR(200) DEFAULT NULL COMMENT '主键字段',
			`sink_extend` VARCHAR(200) DEFAULT NULL COMMENT '建表扩展',
			PRIMARY KEY (`source_table`)
		)ENGINE=INNODB DEFAULT CHARSET=utf8;

	Flink CDC配置表数据格式：
		{"before":null,"after":{"source_table":"aa","sink_table":"aa","sink_columns":"aa","sink_pk":"aa","sink_extend":null},"source":{"version":"1.5.4.Final","connector":"mysql","name":"mysql_binlog_source","ts_ms":1671354672150,"snapshot":"false","db":"gmall_config_2212","sequence":null,"table":"table_process","server_id":0,"gtid":null,"file":"","pos":0,"row":0,"thread":null,"query":null},"op":"r","ts_ms":1671354672156,"transaction":null}
4.维表数据动态过滤
	4.1 将Flink CDC读取的配置表数据转换为广播流
	4.2 连接主流与配置表数据流
	4.3 广播流工作：
		1.获取配置信息
		2.检查Phoenix中是是否建立维表 checkTable()
		3.将配置信息写入广播状态中
	4.4	主流工作：
		1.获取广播流状态
		2.根据与广播流中的配置信息过滤字段 filterColumn()
		3.主流写入sinkType字段后发送至下游
5.数据写入Phoenix
	自定义Sink
	创建Phoenix连接池(Druid)
6.测试：
	6.1 写入Phoenix前测试：
		准备工作： 
			（1）初始化Maxwell,清空MySQL下Maxwell库中的所有表
			（2）启动HDFS、Zookeeper、Kafa、Maxwell、Hbase
			（3）在Phoenix中创建GMALL2212_REALTIME数据库 ： create schema GMALL2212_REALTIME;

	6.2 写入Hbase测试
		// 数据流：web/app->ngnix->mysql(binlog)->maxwell->kafka(ods)->FlinkApp->Phoenix->Hbase
		// 程序流：mock->mysql->maxwell->kafka(zk)->DimApp(Flink CDC/mysql)->Phoenix(Hbase/zk/HDFS)

DWD层： ！！！拆分！！！
	1.数据类型：
		1.1 日志数据（启动、曝光、页面、动作、错误）： topic_log
			消费ODS主题数据 -> 将数据按照表拆分存入不同的表主题 -> 消费不同主题数据进行关联 -> 写入Kafka主题

			错误数据
			启动数据 & 页面数据 二者互斥
				页面数据：动作 曝光
		1.2 业务数据（N种：所需要处理的事实表）：topic_db
			订单表&订单明细表&订单明细购物券&订单明细活动表
			维度退化
			消费ODS主题数据 -> 使用程序过滤需要的数据进行关联 -> 写入Kafka主题
		1.3 数据格式
			① 日志数据：
			{"common":{"ar":"110000","ba":"iPhone","ch":"Appstore","is_new":"0","md":"iPhone Xs Max","mid":"mid_77821","os":"iOS 13.2.3","uid":"853","vc":"v2.1.134"},"start":{"entry":"icon","loading_time":2040,"open_ad_id":19,"open_ad_ms":3308,"open_ad_skip_ms":0},"ts":1645423406000}
			
			{"common":{"ar":"110000","ba":"iPhone","ch":"Appstore","is_new":"0","md":"iPhone Xs Max","mid":"mid_77821","os":"iOS 13.2.3","uid":"853","vc":"v2.1.134"},"displays":[{"display_type":"activity","item":"1","item_type":"activity_id","order":1,"pos_id":5},{"display_type":"activity","item":"1","item_type":"activity_id","order":2,"pos_id":5},{"display_type":"promotion","item":"8","item_type":"sku_id","order":3,"pos_id":4},{"display_type":"query","item":"17","item_type":"sku_id","order":4,"pos_id":4},{"display_type":"query","item":"5","item_type":"sku_id","order":5,"pos_id":4},{"display_type":"query","item":"29","item_type":"sku_id","order":6,"pos_id":4},{"display_type":"query","item":"3","item_type":"sku_id","order":7,"pos_id":1},{"display_type":"promotion","item":"4","item_type":"sku_id","order":8,"pos_id":2},{"display_type":"query","item":"13","item_type":"sku_id","order":9,"pos_id":3}],"page":{"during_time":11911,"page_id":"home"},"ts":1645423406000}

			{"actions":[{"action_id":"favor_add","item":"22","item_type":"sku_id","ts":1645423413745},{"action_id":"get_coupon","item":"3","item_type":"coupon_id","ts":1645423418490}],"common":{"ar":"110000","ba":"iPhone","ch":"Appstore","is_new":"0","md":"iPhone Xs Max","mid":"mid_77821","os":"iOS 13.2.3","uid":"853","vc":"v2.1.134"},"displays":[{"display_type":"query","item":"17","item_type":"sku_id","order":1,"pos_id":2},{"display_type":"promotion","item":"12","item_type":"sku_id","order":2,"pos_id":2},{"display_type":"recommend","item":"27","item_type":"sku_id","order":3,"pos_id":3},{"display_type":"promotion","item":"2","item_type":"sku_id","order":4,"pos_id":1},{"display_type":"query","item":"20","item_type":"sku_id","order":5,"pos_id":2},{"display_type":"promotion","item":"30","item_type":"sku_id","order":6,"pos_id":4}],"page":{"during_time":14235,"item":"22","item_type":"sku_id","last_page_id":"good_list","page_id":"good_detail","source_type":"query"},"ts":1645423409000}

			{"common":{"ar":"230000","ba":"Xiaomi","ch":"huawei","is_new":"1","md":"Xiaomi 9","mid":"mid_479116","os":"Android 10.0","uid":"608","vc":"v2.1.132"},"displays":[{"display_type":"activity","item":"2","item_type":"activity_id","order":1,"pos_id":3},{"display_type":"activity","item":"1","item_type":"activity_id","order":2,"pos_id":3},{"display_type":"query","item":"22","item_type":"sku_id","order":3,"pos_id":1},{"display_type":"query","item":"34","item_type":"sku_id","order":4,"pos_id":3},{"display_type":"query","item":"32","item_type":"sku_id","order":5,"pos_id":5},{"display_type":"promotion","item":"15","item_type":"sku_id","order":6,"pos_id":1},{"display_type":"promotion","item":"6","item_type":"sku_id","order":7,"pos_id":5},{"display_type":"promotion","item":"6","item_type":"sku_id","order":8,"pos_id":1},{"display_type":"promotion","item":"6","item_type":"sku_id","order":9,"pos_id":2},{"display_type":"recommend","item":"23","item_type":"sku_id","order":10,"pos_id":5}],"err":{"error_code":1093,"msg":" Exception in thread \\  java.net.SocketTimeoutException\\n \\tat com.atgugu.gmall2020.mock.bean.log.AppError.main(AppError.java:xxxxxx)"},"page":{"during_time":15007,"page_id":"home"},"ts":1645423407000}

			{"common":{"ar":"110000","ba":"Xiaomi","ch":"xiaomi","is_new":"1","md":"Xiaomi Mix2 ","mid":"mid_1818969","os":"Android 11.0","uid":"513","vc":"v2.1.134"},"err":{"error_code":2633,"msg":" Exception in thread \\  java.net.SocketTimeoutException\\n \\tat com.atgugu.gmall2020.mock.bean.log.AppError.main(AppError.java:xxxxxx)"},"start":{"entry":"notice","loading_time":12438,"open_ad_id":7,"open_ad_ms":4407,"open_ad_skip_ms":0},"ts":1651217959000}
			{"common":{"ar":"110000","ba":"Xiaomi","ch":"xiaomi","is_new":"1","md":"Xiaomi Mix2 ","mid":"mid_1818969","os":"Android 11.0","uid":"513","vc":"v2.1.134"},"err":{"error_code":2633,"msg":" Exception in thread \\  java.net.SocketTimeoutException\\n \\tat com.atgugu.gmall2020.mock.bean.log.AppError.main(AppError.java:xxxxxx)"},"start":{"entry":"notice","loading_time":12438,"open_ad_id":7,"open_ad_ms":4407,"open_ad_skip_ms":0},"ts":1651217969000}
			{"common":{"ar":"110000","ba":"Xiaomi","ch":"xiaomi","is_new":"1","md":"Xiaomi Mix2 ","mid":"mid_1818969","os":"Android 11.0","uid":"513","vc":"v2.1.134"},"err":{"error_code":2633,"msg":" Exception in thread \\  java.net.SocketTimeoutException\\n \\tat com.atgugu.gmall2020.mock.bean.log.AppError.main(AppError.java:xxxxxx)"},"start":{"entry":"notice","loading_time":12438,"open_ad_id":7,"open_ad_ms":4407,"open_ad_skip_ms":0},"ts":1851217969000}

			UV数据
			{"common":{"ar":"110000","ba":"iPhone","ch":"Appstore","is_new":"0","md":"iPhone Xs Max","mid":"mid_77821","os":"iOS 13.2.3","uid":"853","vc":"v2.1.134"},"page":{"during_time":11911,"page_id":"home"},"ts":1645423416000}

			{"common":{"ar":"110000","ba":"iPhone","ch":"Appstore","is_new":"0","md":"iPhone Xs Max","mid":"mid_77821","os":"iOS 13.2.3","uid":"853","vc":"v2.1.134"},"page":{"during_time":11911,"page_id":"home","last_page_id":"good_detail"},"ts":1645423407000}

			{"common":{"ar":"110000","ba":"iPhone","ch":"Appstore","is_new":"0","md":"iPhone Xs Max","mid":"mid_07821","os":"iOS 13.2.3","uid":"853","vc":"v2.1.134"},"page":{"during_time":11911,"page_id":"home"},"ts":1645423416000}

			UJ数据
			{"common":{"ar":"110000","ba":"iPhone","ch":"Appstore","is_new":"0","md":"iPhone Xs Max","mid":"mid_77821","os":"iOS 13.2.3","uid":"853","vc":"v2.1.134"},"page":{"during_time":11911,"page_id":"home","last_page_id":"good_detail"},"ts":1645423407000}

			{"common":{"ar":"110000","ba":"iPhone","ch":"Appstore","is_new":"0","md":"iPhone Xs Max","mid":"mid_07821","os":"iOS 13.2.3","uid":"853","vc":"v2.1.134"},"page":{"during_time":11911,"page_id":"home"},"ts":1645423416000}

			{"common":{"ar":"110000","ba":"iPhone","ch":"Appstore","is_new":"0","md":"iPhone Xs Max","mid":"mid_07821","os":"iOS 13.2.3","uid":"853","vc":"v2.1.134"},"page":{"during_time":11911,"page_id":"home"},"ts":1645423430000} --超时

			{"common":{"ar":"110000","ba":"iPhone","ch":"Appstore","is_new":"0","md":"iPhone Xs Max","mid":"mid_07821","os":"iOS 13.2.3","uid":"853","vc":"v2.1.134"},"page":{"during_time":11911,"page_id":"home"},"ts":1645423433000}

			{"common":{"ar":"110000","ba":"iPhone","ch":"Appstore","is_new":"0","md":"iPhone Xs Max","mid":"mid_07821","os":"iOS 13.2.3","uid":"853","vc":"v2.1.134"},"page":{"during_time":11911,"page_id":"home"},"ts":1645423438000}

			Flink SQL -- lookupJoin
			CREATE TEMPORARY TABLE base_dic (
			  dic_code STRING,
			  dic_name STRING,
			  parent_code STRING,
			  create_time STRING,
			  operate_time STRING
			) WITH (
			  'connector' = 'jdbc',
			  'url' = 'jdbc:mysql://bigdata101:3306/gmall',
			  'table-name' = 'base_dic',
			  'username' = 'root',
			  'password' = '123456'
			);

			SELECT t1.id,dic.dic_name,t1.pt
			FROM t1 
			  JOIN base_dic dic FOR SYSTEM_TIME AS OF t1.pt AS dic
			    ON t1.id = dic.dic_code;

			② 业务数据

CREATE TABLE topic_db (
  `database` STRING,
  `table` STRING,
  `type` STRING,
  `data` STRING,
  `old` STRING,
  pt AS PROCTIME()
)WITH (
  'connector' = 'kafka',
  'topic' = topic,
  'properties.bootstrap.servers' = 'localhost:9092',
  'properties.group.id' = groupId,
  'scan.startup.mode' = 'group-offsets',
  'format' = 'json'
)

select 
    `data`['id'] id,
    `data`['user_id'] user_id,
    `data`['sku_id'] sku_id,
    `data`['cart_price'] cart_price,
    if(`type`='insert',`data`['sku_num'],cast(cast(`data`['sku_num'] as int) - cast(`old`['sku_num'] as int) as string)) sku_num,
    `data`['sku_name'] sku_name,
    `data`['is_checked'] is_checked,
    `data`['create_time'] create_time,
    `data`['operate_time'] operate_time,
    `data`['is_ordered'] is_ordered,
    `data`['order_time'] order_time,
    `data`['source_type'] source_type,
    `data`['source_id'] source_id,
    pt
from topic_db
where `database`='gmall' 
and `table`='cart_info'
and (`type`='insert'
or (
    type='update' 
    and `data`['sku_num'] is not null 
    and cast(`data`['sku_num'] as int) > cast(`old`['sku_num'] as int)
))

select 
    ca.id,
    ca.user_id,
    ca.sku_id,
    ca.cart_price,
    ca.sku_num,
    ca.sku_name,
    ca.is_checked,
    ca.create_time,
    ca.operate_time,
    ca.is_ordered,
    ca.order_time,
    ca.source_type source_type_id,
    dic.dic_name source_type_name,
    ca.source_id
from cart_add_detail ca JOIN base_dic 
FOR SYSTEM_TIME AS OF ca.pt as dic
ON ca.source_type = dic.dic_code;

create table dwd_trade_cart_add (
id,
user_id,
sku_id,
cart_price,
sku_num,
sku_name,
is_checked,
create_time,
operate_time,
is_ordered,
order_time,
source_type_id,
source_type_name,
source_id
)
-----------------------   订单表预处理    -----------------------
------------------------- order_detail -------------------------
SELECT
    `data`['id'] id,
    `data`['order_id'] order_id,
    `data`['sku_id'] sku_id,
    `data`['sku_name'] sku_name,
    `data`['order_price'] order_price,
    `data`['sku_num'] sku_num,
    `data`['create_time'] create_time,
    `data`['source_type'] source_type,
    `data`['source_id'] source_id,
    `data`['split_total_amount'] split_total_amount,
    `data`['split_activity_amount'] split_activity_amount,
    `data`['split_coupon_amount'] split_coupon_amount,
    pt
FROM `topic_db`
WHERE `database`='gmall'
AND `table`='order_detail'
AND `type`='insert'
------------------------- order_info -------------------------
SELECT
    `data`['id'] id,
    `data`['consignee'] consignee,
    `data`['consignee_tel'] consignee_tel,
    `data`['total_amount'] total_amount,
    `data`['order_status'] order_status,
    `data`['user_id'] user_id,
    `data`['payment_way'] payment_way,
    `data`['delivery_address'] delivery_address,
    `data`['order_comment'] order_comment,
    `data`['out_trade_no'] out_trade_no,
    `data`['trade_body'] trade_body,
    `data`['create_time'] create_time,
    `data`['operate_time'] operate_time,
    `data`['expire_time'] expire_time,
    `data`['process_status'] process_status,
    `data`['tracking_no'] tracking_no,
    `data`['parent_order_id'] parent_order_id,
    `data`['province_id'] province_id,
    `data`['activity_reduce_amount'] activity_reduce_amount,
    `data`['coupon_reduce_amount'] coupon_reduce_amount,
    `data`['original_total_amount'] original_total_amount,
    `data`['feight_fee'] feight_fee,
    `data`['feight_fee_reduce'] feight_fee_reduce,
    `data`['refundable_time'] refundable_time,
    `type`,
    `old`
FROM `topic_db`
WHERE `database`='gmall'
AND `table`='order_info'
AND (`type`='insert' OR `type`='update')
------------------------- order_detail_activity -------------------------
SELECT
    `data`['id'] id,
    `data`['order_id'] order_id,
    `data`['order_detail_id'] order_detail_id,
    `data`['activity_id'] activity_id,
    `data`['activity_rule_id'] activity_rule_id,
    `data`['sku_id'] sku_id,
    `data`['create_time'] create_time
FROM `topic_db`
WHERE `database`='gmall'
AND `table`='order_detail_activity'
AND `type`='insert'
------------------------- order_detail_coupon -------------------------
SELECT
    `data`['id'] id,
    `data`['order_id'] order_id,
    `data`['order_detail_id'] order_detail_id,
    `data`['coupon_id'] coupon_id,
    `data`['coupon_use_id'] coupon_use_id,
    `data`['sku_id'] sku_id,
    `data`['create_time'] create_time
FROM `topic_db`
WHERE `database`='gmall'
AND `table`='order_detail_coupon'
AND `type`='insert'
-------- order_detail/info/detail_activity/detail_coupon/base_dic join --------
SELECT
    od.id,
    od.order_id,
    od.sku_id,
    od.sku_name,
    od.order_price,
    od.sku_num,
    od.create_time,
    od.source_type source_type_id,
    dic.dic_name source_type_name,
    od.source_id,
    od.split_total_amount,
    od.split_activity_amount,
    od.split_coupon_amount,
    oi.consignee,
    oi.consignee_tel,
    oi.total_amount,
    oi.order_status,
    oi.user_id,
    oi.payment_way,
    oi.delivery_address,
    oi.order_comment,
    oi.out_trade_no,
    oi.trade_body,
    oi.create_time,
    oi.operate_time,
    oi.expire_time,
    oi.process_status,
    oi.tracking_no,
    oi.parent_order_id,
    oi.province_id,
    oi.activity_reduce_amount,
    oi.coupon_reduce_amount,
    oi.original_total_amount,
    oi.feight_fee,
    oi.feight_fee_reduce,
    oi.refundable_time,
    oa.id order_detail_activity_id,
    oa.activity_id,
    oa.activity_rule_id,
    oa.create_time,
    oc.id order_detail_coupon_id,
    oc.coupon_id,
    oc.coupon_use_id,
    oc.create_time,
    oi.`type`,
    oi.`old`
FROM order_detail_info od 
LEFT JOIN order_info oi
ON od.order_id = oi.id
LEFT JOIN order_activity_info oa
ON od.id = oa.order_detail_id
LEFT JOIN order_coupon_info oc
ON od.id = oc.order_detail_id
JOIN base_dic FOR SYSTEM_TIME AS OF od.pt as dic
ON od.source_type = dic.dic_code


------------------------------------------------------------------------
| +I |                          15453 |                           5752 |                             12 | Apple iPhone 12 (A2404) 128... |                         9197.0 |                              3 |            2022-02-21 19:17:14 |                           2401 |                       用户查询 |                         (NULL) |                        26391.0 |                         1200.0 |                         (NULL) |                           朱瑾 |                    13820390694 |                       48412.98 |                           1002 |                           1811 |                         (NULL) |      第1大街第25号楼4单元816门 |                     描述762441 |                699256148484788 | 华为 HUAWEI P40 麒麟990 5G ... |            2022-02-21 19:17:14 |            2022-02-21 19:17:15 |            2022-02-21 19:32:14 |                         (NULL) |                         (NULL) |                         (NULL) |                             25 |                         1200.0 |                            0.0 |                       49598.98 |                           14.0 |                         (NULL) |                         (NULL) |                            759 |                              2 |                              4 |            2022-02-21 19:17:14 |                         (NULL) |                         (NULL) |                         (NULL) |                         (NULL) |

------------------------------------------------------------------------

CREATE TABLE IF NOT EXISTS dwd_trade_order_pre_process(
    `id` STRING,
    `order_id` STRING,
    `sku_id` STRING,
    `sku_name` STRING,
    `order_price` STRING,
    `sku_num` STRING,
    `create_time` STRING,
    `source_type_id` STRING,
    `source_type_name` STRING,
    `source_id` STRING,
    `split_total_amount` STRING,
    `split_activity_amount` STRING,
    `split_coupon_amount` STRING,
    `consignee` STRING,
    `consignee_tel` STRING,
    `total_amount` STRING,
    `order_status` STRING,
    `user_id` STRING,
    `payment_way` STRING,
    `delivery_address` STRING,
    `order_comment` STRING,
    `out_trade_no` STRING,
    `trade_body` STRING,
    `operate_time` STRING,
    `expire_time` STRING,
    `process_status` STRING,
    `tracking_no` STRING,
    `parent_order_id` STRING,
    `province_id` STRING,
    `activity_reduce_amount` STRING,
    `coupon_reduce_amount` STRING,
    `original_total_amount` STRING,
    `feight_fee` STRING,
    `feight_fee_reduce` STRING,
    `refundable_time` STRING,
    `order_detail_activity_id` STRING,
    `activity_id` STRING,
    `activity_rule_id` STRING,
    `order_detail_coupon_id` STRING,
    `coupon_id` STRING,
    `coupon_use_id` STRING,
    `type` STRING,
    `old` MAP<STRING,STRING>,
    PRIMARY KEY (id) NOT ENFORCED
)

{"id":"16103","order_id":"5965","sku_id":"9","sku_name":"Apple iPhone 12 (A2404) 64GB 红色 支持移动联通电信5G 双卡双待手机","order_price":"8197.0","sku_num":"3","create_time":"2022-02-21 20:26:17","source_type_id":"2401","source_type_name":"用户查询","source_id":null,"split_total_amount":"24227.1","split_activity_amount":"363.9","split_coupon_amount":null,"consignee":"令狐寒伊","consignee_tel":"13161131088","total_amount":"33827.0","order_status":"1006","user_id":"2112","payment_way":null,"delivery_address":"第2大街第29号楼6单元967门","order_comment":"描述119845","out_trade_no":"767523261973712","trade_body":"CAREMiLLE珂曼奶油小方口红 雾面滋润保湿持久丝缎唇膏 M02干玫瑰等11件商品","operate_time":"2022-02-21 20:26:20","expire_time":"2022-02-21 20:41:17","process_status":null,"tracking_no":null,"parent_order_id":null,"province_id":"5","activity_reduce_amount":"0.0","coupon_reduce_amount":"0.0","original_total_amount":"33819.0","feight_fee":"8.0","feight_fee_reduce":null,"refundable_time":null,"order_detail_activity_id":"957","activity_id":"2","activity_rule_id":"4","order_detail_coupon_id":null,"coupon_id":null,"coupon_use_id":null,"type":"update","old":{"order_status":"1005"}}

------------------dwd trade order detail---------------------
select 
    id,
order_id,
user_id,
sku_id,
sku_name,
sku_num,
order_price,
province_id,
activity_id,
activity_rule_id,
coupon_id,
create_time,
source_id,
source_type source_type_id
source_type_name,
split_activity_amount,
split_coupon_amount,
split_total_amount,
row_op_ts
from dwd_trade_order_pre_process
where `type`='insert'

create table dwd_order_detail(
id STRING,
order_id STRING,
user_id STRING,
sku_id STRING,
sku_name STRING,
sku_num STRING,
order_price STRING,
province_id STRING,
activity_id STRING,
activity_rule_id STRING,
coupon_id STRING,
create_time STRING,
source_id STRING,
source_type_id STRING
source_type_name STRING,
split_activity_amount STRING,
split_coupon_amount STRING,
split_total_amount STRING,
row_op_ts STRING
)

------------------dwd trade cancel detail---------------------
select 
    id,
    order_id,
    user_id,
    sku_id,
    sku_name,
    sku_num,
    order_price,
    province_id,
    activity_id,
    activity_rule_id,
    coupon_id,
    operate_time cancel_time,
    source_id,
    source_type_id,
    source_type_name,
    split_activity_amount,
    split_coupon_amount,
    split_total_amount,
    row_op_ts
from dwd_trade_order_pre_process
where `type` = 'update'
and `old`['order_stauts'] is not null
and `order_status` = '1003'

create table if not exists dwd_cancel_detail(
    id STRING,
    order_id STRING,
    user_id STRING,
    sku_id STRING,
    sku_name STRING,
    sku_num STRING,
    order_price STRING,
    province_id STRING,
    activity_id STRING,
    activity_rule_id STRING,
    coupon_id STRING,
    cancel_time STRING,
    source_id STRING,
    source_type_id STRING,
    source_type_name STRING,
    split_activity_amount STRING,
    split_coupon_amount STRING,
    split_total_amount STRING,
    row_op_ts TIMESTAMP_LTZ(3),
    PRIMARY KEY (id) NOT ENFORCED)

------------------dwd trade pay detail suc---------------------
select
    `data`['order_id'] order_id,
    `data`['user_id'] user_id,
    `data`['payment_type'] payment_type,
    `data`['callback_time'] callback_time,
    pt
from topic_db
where `database`='gmall'
and `table` = 'payment_info'
and `type` = 'update'
and `data`['payment_status'] = '1602' 

SELECT
    od.id,
    od.order_id,
    od.user_id,
    od.sku_id,
    od.sku_name,
    od.sku_num,
    od.order_price,
    od.province_id,
    od.activity_id,
    od.activity_rule_id,
    od.coupon_id,
    pi.payment_type payment_type_id,
    dic.dic_name payment_type_name,
    od.create_time,
    od.source_id,
    od.source_type_id,
    od.source_type_name,
    od.split_activity_amount,
    od.split_coupon_amount,
    od.split_total_amount,
    od.row_op_ts
FROM payment_info pi
LEFT JOIN dwd_order_detail od
ON pi.order_id=od.order_id
JOIN base_dic FOR SYSTEM_TIME AS OF pi.pt AS dic
ON pi.payment_type=dic.dic_code

CREATE TABLE IF NOT EXISTS dwd_pay_detail_suc(
    id STRING,
    order_id STRING,
    user_id STRING,
    sku_id STRING,
    sku_name STRING,
    sku_num STRING,
    order_price STRING,
    province_id STRING,
    activity_id STRING,
    activity_rule_id STRING,
    coupon_id STRING,
    payment_type_id STRING,
    payment_type_name STRING,
    create_time STRING,
    source_id STRING,
    source_type_id STRING,
    source_type_name STRING,
    split_activity_amount STRING,
    split_coupon_amount STRING,
    split_total_amount STRING,
    row_op_ts TIMESTAMP_LTZ(3),
    PRIMARY KEY (id) NOT ENFORCED
)

------------------dwd trade order refund---------------------
select
    `data`['id'] id,
    `data`['user_id'] user_id,
    `data`['order_id'] order_id,
    `data`['sku_id'] sku_id,
    `data`['refund_type'] refund_type,
    `data`['refund_num'] refund_num,
    `data`['refund_amount'] refund_amount,
    `data`['refund_reason_type'] refund_reason_type,
    `data`['refund_reason_txt'] refund_reason_txt,
    `data`['refund_status'] refund_status,
    `data`['create_time'] create_time,
    pt
from topic_db
where `database`='gmall'
and `table`='order_refund_info'
and `type`='insert'

select
    `data`['id'] id,
    `data`['province_id'] province_id,
    `old`
from topic_db
where `database`='gmall'
and `table`='order_info'
and `data`['order_status'] = '1005'
and `type`='update'
and `old`['order_status'] is not null

select
    ori.id,
    ori.user_id,
    ori.order_id,
    ori.sku_id,
    oi.province_id,
    ori.refund_type,
    ori.refund_num,
    ori.refund_amount,
    ori.refund_reason_type refund_reason_type_id,
    dic.dic_name refund_type_name,
    ori.refund_reason_txt,
    ori.refund_status,
    ori.create_time,
    current_row_timestamp() row_op_ts
from order_refund_info ori
left join order_info oi 
on ori.order_id = oi.order_id
join base_dic FOR SYSTEM_TIME AS OF ori.pt AS dic
ON ori.refund_reason_type = dic.dic_code

create table dwd_order_refund(
    id STRING,
    user_id STRING,
    order_id STRING,
    sku_id STRING,
    province_id STRING,
    refund_type STRING,
    refund_num STRING,
    refund_amount STRING,
    refund_reason_type_id STRING,
    refund_reason_type_name STRING,
    refund_reason_txt STRING,
    refund_status STRING,
    create_time STRING,
    row_op_ts TIMESTAMP_LTZ(3),
    PRIMARY KEY (id) NOT ENFORCED)

------------------dwd trade order refund---------------------
select
    `data`['order_id'] order_id,
    `data`['sku_id'] sku_id,
    `data`['refund_num'] refund_num
from topic_db
where `database` = 'gmall'
and `table` = 'order_refund_info'
and `type` = 'update'
and `data`['refund_status'] = '0705'
and `old`['refund_status'] is not null

select
    `data`['id'] id,
    `data`['user_id'] user_id,
    `data`['province_id'] province_id,
    `old`
from topic_db
where `database` = 'gmall'
and `table` = 'order_info'
and `type` = 'update'
and `data`['order_status'] = '1006'
and `old`['order_status'] is not null

select
    `data`['id'] id,
    `data`['order_id'] order_id,
    `data`['sku_id'] sku_id,
    `data`['payment_type'] payment_type,
    `data`['total_amount'] total_amount,
    `data`['callback_time'] callback_time,
    pt
from topic_db
where `database` = 'gmall'
and `table` = 'refund_payment'
and `type` = 'update'
and `data`['order_status'] = '0705'
and `old`['order_status'] is not null

select
    rp.id,
    oi.user_id,
    rp.order_id,
    rp.sku_id,
    oi.province_id,
    rp.payment_type payment_type_id,
    dic.dic_name payment_type_name,
    rs.refund_num,
    rp.total_amount,
    rp.callback_time,
    current_row_timestamp() row_op_ts
from refund_payment_info rp
join refund_suc_info rs
on rp.order_id = rs.order_id
join order_refund_info oi
on rp.order_id = oi.id
join base_dic FOR SYSTEM_TIME AS OF rp.pt AS dic
on rp.payment_type = dic.dic_code

create table if not exists dwd_refund_pay_suc(
    id STRING,
    user_id STRING,
    order_id STRING,
    sku_id STRING,
    province_id STRING,
    payment_type_id STRING,
    payment_type_name STRING
    refund_num STRING,
    total_amount STRING,
    callback_time STRING,
    row_op_ts TIMESTAMP_LTZ(3)
)

---------------------dwd_tool_coupon_get----------------------
select
    `data`['id'] id,
    `data`['coupon_id'] coupon_id,
    `data`['user_id'] user_id,
    `data`['get_time'] get_time,
    `ts`
from topic_db
where `database`='gmall'
and `table`='coupon_use'
and `type`='insert'

create table if not exists dwd_coupon_get(
    id STRING,
    coupon_id STRING,
    user_id STRING,
    get_time STRING,
    ts STRING
)
---------------------dwd_tool_coupon_get----------------------
select
    `data`['id'] id,
    `data`['coupon_id'] coupon_id,
    `data`['user_id'] user_id,
    `data`['order_id'] order_id,
    `data`['using_time'] using_time,
    ts
from topic_db
where `database`='gmall'
and `table`='coupon_use'
and `type`='update'
and `data`['coupon_status']='1402'
and `old`['coupon_status']='1401'

create table if not exists dwd_coupon_order(
    id STRING,
    coupon_id STRING,
    user_id STRING,
    order_id STRING,
    using_time STRING,
    ts STRING
)


----------------------dwd_inseraction_favor_add--------------------
select
    `data`['id'] id,
    `data`['user_id'] user_id,
    `data`['sku_id'] sku_id,
    `data`['create_time'] create_time,
from topic_db
where `database`='gmall'
and `table`='favor_info'
and `type`='insert'

----------------------dwd_inseraction_comment_info--------------------
select
    `data`['id'] id,
    `data`['user_id'] user_id,
    `data`['sku_id'] sku_id,
    `data`['spu_id'] spu_id,
    `data`['order_id'] order_id,
    `data`['appraise'] appraise,
    `data`['comment_txt'] comment_txt,
    `data`['create_time'] create_time,
    `data`['operate_time'] operate_time,
    pt,
    ts
from topic_db
where `database`='gmall'
and `table`='comment_info'
and `type`='insert'

select
    ci.id,
    ci.user_id,
    ci.sku_id,
    ci.spu_id,
    ci.order_id,
    ci.appraise appraise_type_id,
    dic.dic_name appraise_type_name,
    ci.comment_txt,
    ci.create_time,
    ci.operate_time,
    ci.ts
from comment_info ci
JOIN base_dic FOR SYSTEM_TIME AS OF ci.pt AS dic
ON ci.appraise = dic.dic_code

create table if not exists dwd_comment_info(
    id STRING,
    user_id STRING,
    sku_id STRING,
    spu_id STRING,
    order_id STRING,
    appraise_type_id STRING,
    appraise_type_name STRING,
    comment_txt STRING,
    create_time STRING,
    operate_time STRING,
    ts STRING,
    PRIMARY KEY (id) NOT ENFORCED
)

**********************************************DWS**********************************************
-------------流量域 关键词----------------
create table page_log(
    `page` MAP<STRING,STRING>,
    `ts` BIGINT,
    `rt` AS TO_TIMESTAMP(UNIX_TIMESTAMP(ts/1000)),
    WATERMARK FOR rt AS rt - INTERVAL '2' SECOND
)

select
   page['item'] item,
   rt
from page_log
where page['item_type'] = 'keyword'
and page['last_page_id'] = 'search'
and page['item'] is not null

"SELECT myField, word, length " +
  "FROM MyTable, LATERAL TABLE(SplitFunction(myField))

select
    item,
    word,
    rt
from filter_table, LATERAL TABLE(SplitFunction(item))

select
    'search' source,
    DATE_FORAMT(TUMBLE_START(rt,  INTERVAL '10' SECOND),'yyyy-MM-dd HH:mm:ss') stt,
    DATE_FORAMT(TUMBLE_END(rt,  INTERVAL '10' SECOND),'yyyy-MM-dd HH:mm:ss') edt,
    word keyword,
    count(*) keyword_count,
    UNIX_TIMESTAMP()*1000 ts
from split_word
group by source,stt,ett,word,TUMBLE(rt,  INTERVAL '10' SECOND)